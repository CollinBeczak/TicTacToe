{"ast":null,"code":"var _jsxFileName = \"/Users/collinbeczak/Documents/projects/tictactoe/src/components/Result.js\";\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Result = _ref => {\n  let {\n    cells,\n    results,\n    setResults\n  } = _ref;\n  const winningNumbers = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < winningNumbers.length; i++) {\n    const [a, b, c] = winningNumbers[i];\n\n    if (cells[a] && cells[a] === cells[b] && cells[b] === cells[c]) {\n      setResults(`Results: ${cells[a]}`);\n      break;\n    } else if ((cells[0] && cells[1] && cells[2] && cells[3] && cells[4] && cells[5] && cells[6] && cells[7] && cells[8]) === '') {\n      setResults('');\n    } else {\n      setResults('Results: Tie');\n      break;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: results\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 13\n  }, this);\n};\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["/Users/collinbeczak/Documents/projects/tictactoe/src/components/Result.js"],"names":["React","useEffect","Result","cells","results","setResults","winningNumbers","i","length","a","b","c"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,MAAM,GAAG,QAAoC;AAAA,MAAnC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAAmC;AAE/C,QAAMC,cAAc,GAAG,CAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAF,EACE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADF,EAEE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFF,EAGE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHF,EAIE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJF,EAKE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALF,EAME,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANF,EAOE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPF,CAAvB;;AASA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,cAAc,CAACE,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,UAAM,CAACE,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYL,cAAc,CAACC,CAAD,CAAhC;;AACA,QAAIJ,KAAK,CAACM,CAAD,CAAL,IAAYN,KAAK,CAACM,CAAD,CAAL,KAAaN,KAAK,CAACO,CAAD,CAA9B,IAAqCP,KAAK,CAACO,CAAD,CAAL,KAAaP,KAAK,CAACQ,CAAD,CAA3D,EAAgE;AAC5DN,MAAAA,UAAU,CAAE,YAAWF,KAAK,CAACM,CAAD,CAAI,EAAtB,CAAV;AACA;AACH,KAHD,MAGO,IAAI,CAACN,KAAK,CAAC,CAAD,CAAL,IAAYA,KAAK,CAAC,CAAD,CAAjB,IAAwBA,KAAK,CAAC,CAAD,CAA7B,IAAoCA,KAAK,CAAC,CAAD,CAAzC,IAAgDA,KAAK,CAAC,CAAD,CAArD,IACLA,KAAK,CAAC,CAAD,CADA,IACOA,KAAK,CAAC,CAAD,CADZ,IACmBA,KAAK,CAAC,CAAD,CADxB,IAC+BA,KAAK,CAAC,CAAD,CADrC,MAC8C,EADlD,EACsD;AACrDE,MAAAA,UAAU,CAAC,EAAD,CAAV;AACP,KAHM,MAGA;AACHA,MAAAA,UAAU,CAAC,cAAD,CAAV;AACI;AACP;AACJ;;AAEG,sBACI;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKP,CA9BD;;KAAMF,M;AAiCN,eAAeA,MAAf","sourcesContent":["import React, { useEffect } from 'react';\n\nconst Result = ({ cells, results, setResults }) => {\n    \n    const winningNumbers = [ [0, 1, 2], \n                             [3, 4, 5],\n                             [6, 7, 8], \n                             [0, 3, 6], \n                             [1, 4, 7], \n                             [2, 5, 8],\n                             [0, 4, 8],\n                             [2, 4, 6] ];\n\n    for (let i = 0; i < winningNumbers.length; i++) {\n        const [a, b, c] = winningNumbers[i];\n        if (cells[a] && cells[a] === cells[b] && cells[b] === cells[c]) {\n            setResults(`Results: ${cells[a]}`); \n            break;\n        } else if ((cells[0] && cells[1] && cells[2] && cells[3] && cells[4]\n            && cells[5] && cells[6] && cells[7] && cells[8]) === '') {\n                setResults('');\n        } else {\n            setResults('Results: Tie');\n                break;\n        }\n    }\n\n        return (\n            <div>\n                {results}\n            </div>\n        );\n}\n\n\nexport default Result;"]},"metadata":{},"sourceType":"module"}