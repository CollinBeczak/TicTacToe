{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nconst Result = _ref => {\n  _s();\n\n  let {\n    cells\n  } = _ref;\n  console.log(cells);\n  const [results, setResults] = useState();\n  const winningNumbers = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  console.log('tojhslkjhdl');\n\n  for (let i = 0; i < winningNumbers.length; i++) {\n    const [a, b, c] = winningNumbers[i];\n    console.log(i);\n\n    if (cells[a] && cells[a] === cells[b] && cells[b] === cells[c]) {\n      setResults(`Result: ${cells[a]}`);\n    } else {\n      setResults('Results: N/A');\n    }\n  }\n\n  return {\n    results\n  };\n};\n\n_s(Result, \"Sou+IUQnA5GABuSpt1JuwO+5BUA=\");\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["/Users/collinbeczak/Documents/projects/tictactoe/src/components/Result.js"],"names":["React","useState","Result","cells","console","log","results","setResults","winningNumbers","i","length","a","b","c"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,MAAM,GAAG,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,EAAtC;AAEA,QAAMO,cAAc,GAAG,CAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAF,EACE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADF,EAEE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFF,EAGE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHF,EAIE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJF,EAKE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALF,EAME,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANF,EAOE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPF,CAAvB;AAQJJ,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACI,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,cAAc,CAACE,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,UAAM,CAACE,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYL,cAAc,CAACC,CAAD,CAAhC;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;;AACA,QAAIN,KAAK,CAACQ,CAAD,CAAL,IAAYR,KAAK,CAACQ,CAAD,CAAL,KAAaR,KAAK,CAACS,CAAD,CAA9B,IAAqCT,KAAK,CAACS,CAAD,CAAL,KAAaT,KAAK,CAACU,CAAD,CAA3D,EAAgE;AAC5DN,MAAAA,UAAU,CAAE,WAAUJ,KAAK,CAACQ,CAAD,CAAI,EAArB,CAAV;AACH,KAFD,MAEO;AACHJ,MAAAA,UAAU,CAAC,cAAD,CAAV;AACH;AACJ;;AAED,SACI;AAACD,IAAAA;AAAD,GADJ;AAGH,CA3BD;;GAAMJ,M;;KAAAA,M;AA8BN,eAAeA,MAAf","sourcesContent":["import React, {useState} from 'react';\n\nconst Result = ({ cells }) => {\n    console.log(cells);\n\n    const [results, setResults] = useState();\n\n    const winningNumbers = [ [0, 1, 2], \n                             [3, 4, 5],\n                             [6, 7, 8], \n                             [0, 3, 6], \n                             [1, 4, 7], \n                             [2, 5, 8],\n                             [0, 4, 8],\n                             [2, 4, 6] ];\nconsole.log('tojhslkjhdl');\n    for (let i = 0; i < winningNumbers.length; i++) {\n        const [a, b, c] = winningNumbers[i];\n        console.log(i);\n        if (cells[a] && cells[a] === cells[b] && cells[b] === cells[c]) {\n            setResults(`Result: ${cells[a]}`); \n        } else {\n            setResults('Results: N/A');\n        }\n    }\n\n    return (\n        {results}\n    )\n}\n\n\nexport default Result;"]},"metadata":{},"sourceType":"module"}