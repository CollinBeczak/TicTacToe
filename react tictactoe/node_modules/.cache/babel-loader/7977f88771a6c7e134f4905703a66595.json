{"ast":null,"code":"var _jsxFileName = \"/Users/collinbeczak/Documents/projects/tictactoe/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Cell from \"./Cell\";\nimport \"./Table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst winningNumbers = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\nconst App = () => {\n  _s();\n\n  const [turn, setTurn] = useState(\"O\");\n  const [cells, setCells] = useState(Array(9).fill(\"\"));\n  const [results, setResults] = useState(\"\");\n\n  const handleClick = id => {\n    //if game is over, this prevents inadvertant cell clicks\n    if (results !== \"\") {\n      return;\n    }\n\n    let squares = [...cells];\n\n    if (squares[id] !== \"\") {\n      return;\n    }\n\n    if (turn === \"X\") {\n      squares[id] = \"X\";\n      setTurn(\"O\");\n    } else {\n      squares[id] = \"O\";\n      setTurn(\"X\");\n    }\n\n    localStorage.setItem(\"cells\", squares);\n    console.log(\"storage\", localStorage);\n    setCells(squares);\n  };\n\n  const restartGame = () => {\n    if (turn === \"X\") {\n      setTurn(\"O\");\n    } else {\n      setTurn(\"X\");\n    }\n\n    setResults(\"\");\n    setCells(Array(9).fill(\"\"));\n  };\n\n  useEffect(() => {\n    if (cells.find(c => c === \"\") !== \"\") {\n      setResults(\"Results: Tie\");\n    }\n\n    for (let i = 0; i < winningNumbers.length; i++) {\n      const [a, b, c] = winningNumbers[i];\n\n      if (cells[a] && cells[a] === cells[b] && cells[b] === cells[c]) {\n        setResults(`Results: ${cells[a]}`);\n        break;\n      }\n    }\n  }, [cells]);\n  useEffect(() => {\n    setCells(localStorage.getItem(\"cells\"));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"turnShow\",\n      children: [\"Turn: \", turn, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [0, 1, 2].map(n => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [3 * n + 0, 3 * n + 1, 3 * n + 2].map((id, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            onClick: () => handleClick(id),\n            children: cells[id]\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this))\n        }, n, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: results !== \"\" ? \"green\" : \"red\",\n      onClick: () => restartGame(),\n      children: [\" \", results !== \"\" ? \"Play Again\" : \"Reset\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"RQ6CCyFWJ/1gviX4bGOK2D2KLpI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/collinbeczak/Documents/projects/tictactoe/src/components/App.js"],"names":["React","useState","useEffect","Cell","winningNumbers","App","turn","setTurn","cells","setCells","Array","fill","results","setResults","handleClick","id","squares","localStorage","setItem","console","log","restartGame","find","c","i","length","a","b","getItem","map","n","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Cell from \"./Cell\";\nimport \"./Table.css\";\n\nconst winningNumbers = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n];\n\nconst App = () => {\n  const [turn, setTurn] = useState(\"O\");\n  const [cells, setCells] = useState(Array(9).fill(\"\"));\n  const [results, setResults] = useState(\"\");\n\n  const handleClick = (id) => {\n    //if game is over, this prevents inadvertant cell clicks\n    if (results !== \"\") {\n      return;\n    }\n\n    let squares = [...cells];\n    if (squares[id] !== \"\") {\n      return;\n    }\n\n    if (turn === \"X\") {\n      squares[id] = \"X\";\n      setTurn(\"O\");\n    } else {\n      squares[id] = \"O\";\n      setTurn(\"X\");\n    }\n\n    localStorage.setItem(\"cells\", squares);\n    console.log(\"storage\", localStorage);\n    setCells(squares);\n  };\n\n  const restartGame = () => {\n    if (turn === \"X\") {\n      setTurn(\"O\");\n    } else {\n      setTurn(\"X\");\n    }\n    setResults(\"\");\n    setCells(Array(9).fill(\"\"));\n  };\n\n  useEffect(() => {\n    if (cells.find((c) => c === \"\") !== \"\") {\n      setResults(\"Results: Tie\");\n    }\n    for (let i = 0; i < winningNumbers.length; i++) {\n      const [a, b, c] = winningNumbers[i];\n      if (cells[a] && cells[a] === cells[b] && cells[b] === cells[c]) {\n        setResults(`Results: ${cells[a]}`);\n        break;\n      }\n    }\n  }, [cells]);\n\n  useEffect(() => {\n    setCells(localStorage.getItem(\"cells\"));\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <span className=\"turnShow\">Turn: {turn}!</span>\n      <table className=\"table\">\n        <tbody>\n          {[0, 1, 2].map((n) => (\n            <tr key={n}>\n              {[3 * n + 0, 3 * n + 1, 3 * n + 2].map((id, index) => (\n                <Cell key={id} onClick={() => handleClick(id)}>\n                  {cells[id]}\n                </Cell>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div>{results}</div>\n      <button\n        className={results !== \"\" ? \"green\" : \"red\"}\n        onClick={() => restartGame()}\n      >\n        {\" \"}\n        {results !== \"\" ? \"Play Again\" : \"Reset\"}\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}