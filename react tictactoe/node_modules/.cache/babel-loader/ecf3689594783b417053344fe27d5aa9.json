{"ast":null,"code":"var _jsxFileName = \"/Users/collinbeczak/Documents/projects/tictactoe/src/components/Result.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Result = _ref => {\n  _s();\n\n  let {\n    cells\n  } = _ref;\n  const [result, setResult] = useState();\n  const winningNumbers = [0, 1, 2] || [0, 1, 2] || [3, 4, 5] || [6, 7, 8] || [0, 3, 6] || [1, 4, 7] || [2, 5, 8] || [0, 4, 8] || [2, 4, 6];\n\n  if (cells[winningNumbers] === ['X', 'X', 'X']) {\n    console.log('andsjjkfhdsajkljldf');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: result\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Result, \"nXaXNLhjvn4T8OC0VrudZqaHndA=\");\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["/Users/collinbeczak/Documents/projects/tictactoe/src/components/Result.js"],"names":["React","useState","Result","cells","result","setResult","winningNumbers","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,MAAM,GAAG,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,EAApC;AAEA,QAAMK,cAAc,GAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,KACpB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADoB,IAEpB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFoB,IAGpB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHoB,IAIpB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJoB,IAKpB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALoB,IAMpB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANoB,IAOpB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPoB,IAQpB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARJ;;AAUA,MAAGH,KAAK,CAACG,cAAD,CAAL,KAA0B,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAA7B,EAA6C;AACzCC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH;;AAGD,sBACI;AAAA,cAAMJ;AAAN;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CArBD;;GAAMF,M;;KAAAA,M;AAwBN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst Result = ({ cells }) => {\n    const [result, setResult] = useState();\n\n    const winningNumbers = ([0, 1, 2] || \n        [0, 1, 2] || \n        [3, 4, 5] || \n        [6, 7, 8] || \n        [0, 3, 6] || \n        [1, 4, 7] || \n        [2, 5, 8] || \n        [0, 4, 8] ||\n        [2, 4, 6])\n\n    if(cells[winningNumbers] === ['X', 'X', 'X']){\n        console.log('andsjjkfhdsajkljldf')\n    }\n\n\n    return (\n        <div>{result}</div>\n    )\n}\n\n\nexport default Result;"]},"metadata":{},"sourceType":"module"}