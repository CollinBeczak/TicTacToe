{"ast":null,"code":"var _jsxFileName = \"/Users/collinbeczak/Documents/projects/tictactoe/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Cell from \"./Cell\";\nimport \"./Table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [turn, setTurn] = useState(\"O\");\n  const [cells, setCells] = useState(Array(9).fill(\"\"));\n  const [results, setResults] = useState(\"\");\n  const winningNumbers = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  useEffect(() => {\n    if ((cells[0] && cells[1] && cells[2] && cells[3] && cells[4] && cells[5] && cells[6] && cells[7] && cells[8]) !== \"\") {\n      setResults(\"Results: Tie\");\n    }\n\n    for (let i = 0; i < winningNumbers.length; i++) {\n      const [a, b, c] = winningNumbers[i];\n\n      if (cells[a] && cells[a] === cells[b] && cells[b] === cells[c]) {\n        setResults(`Results: ${cells[a]}`);\n        break;\n      }\n    }\n  }, [cells]);\n\n  const restartGame = () => {\n    if (turn === \"X\") {\n      setTurn(\"O\");\n    } else {\n      setTurn(\"X\");\n    }\n\n    setResults(\"\");\n    setCells(Array(9).fill(\"\"));\n  };\n\n  const cellFormat = id => {\n    return /*#__PURE__*/_jsxDEV(Cell, {\n      id: id,\n      cells: cells,\n      results: results,\n      setCells: setCells,\n      turn: turn,\n      setTurn: setTurn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"turnShow\",\n      children: [\"Turn: \", turn, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [cellFormat(0), cellFormat(1), cellFormat(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [cellFormat(3), cellFormat(4), cellFormat(5)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [cellFormat(6), cellFormat(7), cellFormat(8)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: results !== \"\" ? \"green\" : \"red\",\n      onClick: () => restartGame(),\n      children: [\" \", results !== \"\" ? \"Play Again\" : \"Reset\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"sqscPg4khwYpqAwyFezYEoaiOVc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/collinbeczak/Documents/projects/tictactoe/src/components/App.js"],"names":["React","useState","Cell","App","turn","setTurn","cells","setCells","Array","fill","results","setResults","winningNumbers","useEffect","i","length","a","b","c","restartGame","cellFormat","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,aAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,GAAD,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACO,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,EAAd,CAAD,CAAlC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAMW,cAAc,GAAG,CACrB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADqB,EAErB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFqB,EAGrB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHqB,EAIrB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJqB,EAKrB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALqB,EAMrB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANqB,EAOrB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPqB,EAQrB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARqB,CAAvB;AAWAC,EAAAA,SAAS,CAAC,MAAM;AACd,QACE,CAACP,KAAK,CAAC,CAAD,CAAL,IACCA,KAAK,CAAC,CAAD,CADN,IAECA,KAAK,CAAC,CAAD,CAFN,IAGCA,KAAK,CAAC,CAAD,CAHN,IAICA,KAAK,CAAC,CAAD,CAJN,IAKCA,KAAK,CAAC,CAAD,CALN,IAMCA,KAAK,CAAC,CAAD,CANN,IAOCA,KAAK,CAAC,CAAD,CAPN,IAQCA,KAAK,CAAC,CAAD,CARP,MAQgB,EATlB,EAUE;AACAK,MAAAA,UAAU,CAAC,cAAD,CAAV;AACD;;AACD,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,cAAc,CAACG,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9C,YAAM,CAACE,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYN,cAAc,CAACE,CAAD,CAAhC;;AACA,UAAIR,KAAK,CAACU,CAAD,CAAL,IAAYV,KAAK,CAACU,CAAD,CAAL,KAAaV,KAAK,CAACW,CAAD,CAA9B,IAAqCX,KAAK,CAACW,CAAD,CAAL,KAAaX,KAAK,CAACY,CAAD,CAA3D,EAAgE;AAC9DP,QAAAA,UAAU,CAAE,YAAWL,KAAK,CAACU,CAAD,CAAI,EAAtB,CAAV;AACA;AACD;AACF;AACF,GArBQ,EAqBN,CAACV,KAAD,CArBM,CAAT;;AAuBA,QAAMa,WAAW,GAAG,MAAM;AACxB,QAAIf,IAAI,KAAK,GAAb,EAAkB;AAChBC,MAAAA,OAAO,CAAC,GAAD,CAAP;AACD,KAFD,MAEO;AACLA,MAAAA,OAAO,CAAC,GAAD,CAAP;AACD;;AACDM,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAJ,IAAAA,QAAQ,CAACC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,EAAd,CAAD,CAAR;AACD,GARD;;AAUA,QAAMW,UAAU,GAAIC,EAAD,IAAQ;AACzB,wBACE,QAAC,IAAD;AACE,MAAA,EAAE,EAAEA,EADN;AAEE,MAAA,KAAK,EAAEf,KAFT;AAGE,MAAA,OAAO,EAAEI,OAHX;AAIE,MAAA,QAAQ,EAAEH,QAJZ;AAKE,MAAA,IAAI,EAAEH,IALR;AAME,MAAA,OAAO,EAAEC;AANX;AAAA;AAAA;AAAA;AAAA,YADF;AAUD,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,2BAAkCD,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA,6BACE;AAAA,gCACE;AAAA,qBACGgB,UAAU,CAAC,CAAD,CADb,EAEGA,UAAU,CAAC,CAAD,CAFb,EAGGA,UAAU,CAAC,CAAD,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAA,qBACGA,UAAU,CAAC,CAAD,CADb,EAEGA,UAAU,CAAC,CAAD,CAFb,EAGGA,UAAU,CAAC,CAAD,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAWE;AAAA,qBACGA,UAAU,CAAC,CAAD,CADb,EAEGA,UAAU,CAAC,CAAD,CAFb,EAGGA,UAAU,CAAC,CAAD,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAqBE;AAAA,gBAAMV;AAAN;AAAA;AAAA;AAAA;AAAA,YArBF,eAsBE;AACE,MAAA,SAAS,EAAEA,OAAO,KAAK,EAAZ,GAAiB,OAAjB,GAA2B,KADxC;AAEE,MAAA,OAAO,EAAE,MAAMS,WAAW,EAF5B;AAAA,iBAIG,GAJH,EAKGT,OAAO,KAAK,EAAZ,GAAiB,YAAjB,GAAgC,OALnC;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CA9FD;;GAAMP,G;;KAAAA,G;AAgGN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Cell from \"./Cell\";\nimport \"./Table.css\";\n\nconst App = () => {\n  const [turn, setTurn] = useState(\"O\");\n  const [cells, setCells] = useState(Array(9).fill(\"\"));\n  const [results, setResults] = useState(\"\");\n\n  const winningNumbers = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  useEffect(() => {\n    if (\n      (cells[0] &&\n        cells[1] &&\n        cells[2] &&\n        cells[3] &&\n        cells[4] &&\n        cells[5] &&\n        cells[6] &&\n        cells[7] &&\n        cells[8]) !== \"\"\n    ) {\n      setResults(\"Results: Tie\");\n    }\n    for (let i = 0; i < winningNumbers.length; i++) {\n      const [a, b, c] = winningNumbers[i];\n      if (cells[a] && cells[a] === cells[b] && cells[b] === cells[c]) {\n        setResults(`Results: ${cells[a]}`);\n        break;\n      }\n    }\n  }, [cells]);\n\n  const restartGame = () => {\n    if (turn === \"X\") {\n      setTurn(\"O\");\n    } else {\n      setTurn(\"X\");\n    }\n    setResults(\"\");\n    setCells(Array(9).fill(\"\"));\n  };\n\n  const cellFormat = (id) => {\n    return (\n      <Cell\n        id={id}\n        cells={cells}\n        results={results}\n        setCells={setCells}\n        turn={turn}\n        setTurn={setTurn}\n      />\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <span className=\"turnShow\">Turn: {turn}!</span>\n      <table className=\"table\">\n        <tbody>\n          <tr>\n            {cellFormat(0)}\n            {cellFormat(1)}\n            {cellFormat(2)}\n          </tr>\n          <tr>\n            {cellFormat(3)}\n            {cellFormat(4)}\n            {cellFormat(5)}\n          </tr>\n          <tr>\n            {cellFormat(6)}\n            {cellFormat(7)}\n            {cellFormat(8)}\n          </tr>\n        </tbody>\n      </table>\n      <div>{results}</div>\n      <button\n        className={results !== \"\" ? \"green\" : \"red\"}\n        onClick={() => restartGame()}\n      >\n        {\" \"}\n        {results !== \"\" ? \"Play Again\" : \"Reset\"}\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}